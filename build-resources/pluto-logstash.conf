{{!
变量: nginx_log_dir
}}

input {
    file {
        type => "nginx-access"
        path => "{{&nginx_log_dir}}/access*"
        exclude => "*.gz"
        # start_position => beginning  # read file from beginning, instead of from end as default
    }
    file {
        type => "nginx-error"
        path => "{{&nginx_log_dir}}/error*"
        exclude => "*.gz"
        # start_position => beginning
    }
}

filter {
    # separate parsing for nginx access and error log
    if [type] == "nginx-access" {
        grok {
            match => { "message" => "^\s*%{IPORHOST:server_host} %{POSINT:server_port} %{NUMBER:request_time} %{COMBINEDAPACHELOG}\s*$" }
        }

        if [clientip] == "127.0.0.1" {
            drop { }
        }

        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
        }
    } else if [type] == "nginx-error" {
        # default nginx error log pattern (nginx 1.4.6). You may change it if it doesn't fit (but ensure "clientip" field)
        grok {
            pattern_definitions => {
                "ERROR_DATE" => "%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}"
                "QUOTED_CONTENT" => "(?:\\.|[^\\\"])*"
            }

            match => {
                "message" => [
                    "%{ERROR_DATE:timestamp} \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{DATA:errormessage}(?:, client: %{IPORHOST:clientip})(?:, server: %{IPORHOST:server}?)(?:, request: \"%{QUOTED_CONTENT:request}\")?(?:, upstream: \"%{QUOTED_CONTENT:upstream}\")?(?:, host: \"%{QUOTED_CONTENT:request_host}\")?(?:, referrer: \"%{URI:referrer}\")?",
                    "%{ERROR_DATE:timestamp} \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}"
                ]
            }
        }

        date {
            match => [ "timestamp", "yyyy/MM/dd HH:mm:ss" ]
        }
    }

    # add geo-location info
    geoip {
        source => "clientip"
    }
}

output {
    # output to local Elasticsearch server as index, separated by log type and month
    elasticsearch {
        hosts => ["127.0.0.1"]
        index => "%{type}-%{+yyyy.MM}"
    }
}
